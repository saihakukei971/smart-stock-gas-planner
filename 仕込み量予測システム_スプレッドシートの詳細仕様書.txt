仕込み量予測システム - 詳細仕様書
各シート詳細仕様
1. 外部データシート
目的: 外部APIから取得したデータの保存・表示
列構成:

A列: 日付 (yyyy/MM/dd形式)
B列: 気温 (数値、℃単位)
C列: 降水確率 (パーセント表示)
D列: UV指数 (数値)
E列: SNS件数 (整数値)
F列: 給料日前 (チェックボックス形式、TRUE/FALSE)
G列: イベント名 (テキスト)
H列: 人流指数 (数値)
I列: 祝日 (チェックボックス形式、TRUE/FALSE)
J列: 天気概要 (テキスト)

データ更新方法: GASスクリプトによる自動更新(6:00AM)または手動更新
保存期間: 直近3ヶ月分のデータを保持
特記事項: 各APIのデータ取得状況はAPIログシートに記録
2. 売上履歴シート
目的: 日別・メニュー別・時間帯別の売上データを記録
列構成:

A列: 日付 (yyyy/MM/dd形式)
B列: 曜日 (日、月、火、水、木、金、土)
C列: 時間帯 (朝、昼、夜のいずれか)
D列: メニュー名 (冷麺、カレー、唐揚げ、ラーメン、チャーハン)
E列: 販売数 (整数値)
F列: 廃棄数 (整数値)
G列: 金額 (通貨形式、¥)

入力タイミング: 営業終了後に当日データを入力
データ検証: 時間帯とメニュー名にはドロップダウンリストを設定
集計機能: メニュー別・時間帯別の集計は年間傾向シートで実施
特記事項: 過去データのインポート機能あり(GAS)
3. ルール一覧シート
目的: 条件判断と生成コメントの設定を管理
列構成:

A列: No (連番)
B列: 条件対象 (気温、降水確率、SNS件数など)
C列: 比較値 (数値または論理値)
D列: 演算子 (>, >=, '=, <, <=)
E列: 外部データ列 (外部データシートの列名)
F列: 出力コメント例 (条件に合致した際に表示するテキスト)

注意点: '='は「'=」と入力してテキスト化
設定例:

気温 > 28℃ → 冷たいメニューを増やす
降水確率 >= 50% → 来客数減少の可能性
SNS件数 >= 60 → 人気メニューの準備増加
給料日前 = TRUE → 客単価上昇見込み
祝日 = TRUE → 来客増加可能性
気温 < 15℃ → 温かいメニュー増量
人流指数 > 100 → 混雑に備える

運用: 店長会議で定期的に見直し・更新
4. 提案結果シート
目的: システムが算出した予測結果を表示
列構成:

A列: 日付 (yyyy/MM/dd形式)
B列: メニュー名 (冷麺、カレー、唐揚げ、ラーメン、チャーハン)
C列: 提案仕込み数 (整数値)
D列: コメント (予測根拠を説明するテキスト)

生成タイミング: 毎朝6:10に自動生成または手動で生成
表示形式: 日付別・メニュー別にグループ化
コメント内容: 影響要因(気温、SNS、イベントなど)と販売予測の根拠
予測方法: 外部データとルール一覧を照合し、salesHistoryとの相関を考慮
5. 手動修正欄シート
目的: 店長による提案内容の最終調整
列構成:

A列: 日付 (yyyy/MM/dd形式)
B列: メニュー名 (冷麺、カレー、唐揚げ、ラーメン、チャーハン)
C列: 提案仕込み数 (整数値、提案結果シートから自動転記)
D列: 手動修正数 (整数値)
E列: 修正理由 (テキスト、修正時に入力)

運用方法:

提案結果生成後、必要に応じて修正
空欄の場合は提案仕込み数がそのまま採用
修正理由は引継ぎ・データ分析のため必ず入力
最終的な仕込み指示はこのシートの値を使用

6. 判断支援シート
目的: 仕込み数以外の重要な判断材料や警告を提供
列構成:

A列: 日付 (yyyy/MM/dd形式)
B列: 警戒対象 (冷房強化、雨対策、給料日対応など)
C列: コメント (具体的な対応策や注意点)

生成方法: 外部データとルール一覧から自動生成
活用例: ミーティングでの注意喚起、シフト調整の判断材料
7. 年間傾向シート
目的: 販売データの長期トレンドを可視化
構成:

冷麺の月別推移グラフ (列グラフ)
カレーの月別推移グラフ (折れ線グラフ)
唐揚げの月別推移グラフ (面グラフ)
曜日別売上傾向 (円グラフ)
気温と冷麺販売数の相関 (散布図+近似曲線)
全メニューの月別推移比較 (複合折れ線グラフ)

データ範囲: 過去12ヶ月分のデータ集計
更新頻度: 週1回自動更新(月曜9:00AM)
活用方法: 店長会議での傾向分析、季節メニュー計画の判断材料
8. APIログシート
目的: API連携の状況と結果を記録
列構成:

A列: 日時 (yyyy/MM/dd HH:mm形式)
B列: API名 (OpenWeatherMap、Twitter/X APIなど)
C列: ステータス (成功/失敗)
D列: 応答時間(ms) (整数値)
E列: エラーメッセージ (エラー発生時のメッセージ)
F列: データサンプル (取得データのサンプル)

記録タイミング: API呼び出し直後に自動記録
保存期間: 30日分を保持し、古いものから自動削除
トラブルシューティング: API連携エラー時の原因特定に使用
9. 設定シート
目的: システム全体の設定値を管理
セクション構成:

店舗情報

店舗名: 〇〇店
住所: 東京都〇〇区〇〇町1-2-3
責任者: 山田太郎
営業時間: 11:00-22:00


メニュー設定

メニューリスト: 冷麺,カレー,唐揚げ,ラーメン,チャーハン
メニュー単価: 700,800,750,850,700


API設定

天気API: OpenWeatherMap
SNS API: Twitter/X API
UV指数API: OpenUV API
祝日API: Google Calendar API


通知設定

メール通知: ✓
メールアドレス: example@example.com
LINE通知: ✓
LINEトークン: xxxxxxxxxxxxxxxxxxxxxxxx


実行設定

自動実行時刻: 06:00
予測実行: 06:10
レポート生成: 月曜 09:00



アクセス制限: 一般スタッフは閲覧のみ、店長以上は編集可能
変更記録: 設定変更は自動でログ記録される
初期設定: システム導入時にGASスクリプトで自動生成
GASスクリプト機能一覧

apiHandlers.gs: 各種API連携処理

天気情報取得(OpenWeatherMap)
SNS投稿数取得(Twitter/X API)
UV指数取得(OpenUV API)
祝日判定(Google Calendar API)
LINE通知送信


dataProcessor.gs: データ加工・分析

過去販売データの集計
曜日・天候別の販売傾向分析
相関係数計算


forecastEngine.gs: 予測エンジン

ルールベース判定
外部要因の重み付け計算
提案仕込み数算出
判断支援コメント生成


outputManager.gs: 出力管理

予測結果のシート出力
メール通知
LINE通知
PDFレポート生成


scheduler.gs: 実行スケジューラ

自動実行トリガー管理
API呼び出し分散実行
エラー通知


utilities.gs: ユーティリティ関数

日付処理
キャッシュ管理
ログ記録
実行時間監視